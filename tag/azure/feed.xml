<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator>
  <link href="/tag/azure/feed.xml" rel="self" type="application/atom+xml" />
  <link href="/" rel="alternate" type="text/html" />
  <updated>2019-06-03T18:55:23+09:00</updated>
  <id>/tag/azure/feed.xml</id>

  
  
  

  
    <title type="html">sysmoon’s blog | </title>
  

  
    <subtitle>문형권 기술블로그 (sysmoon@sk.com)</subtitle>
  

  

  
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
  

  
  

  
    <entry>
      <title type="html">Azure IoTHub</title>
      <link href="/azure-iotedge" rel="alternate" type="text/html" title="Azure IoTHub" />
      <published>2018-05-08T19:00:00+09:00</published>
      <updated>2018-05-08T19:00:00+09:00</updated>
      <id>/azure-iotedge</id>
      <content type="html" xml:base="/azure-iotedge">&lt;h1 id=&quot;introduce&quot;&gt;Introduce&lt;/h1&gt;
&lt;p&gt;Azure IotHub를 이용하여 다양한 IoT 디바이스를 관리하고, Telemetry 정보를 수집하여 Power BI로 분석 가능하다. 또한 IoT 디바이스를 Edge Computing으로 활용하여 IotHub 런타임 위에 ML Conference가 가능한 컨테이너를 내려 다양한 고급 분석이 가능하다.&lt;/p&gt;

&lt;h1 id=&quot;agenda&quot;&gt;Agenda&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;Setup Dev Environment
    &lt;ul&gt;
      &lt;li&gt;IotHub&lt;/li&gt;
      &lt;li&gt;DPS (Device Provisioning Service)&lt;/li&gt;
      &lt;li&gt;Cosmos DB&lt;/li&gt;
      &lt;li&gt;ASA (Azure Streaming Analytics)&lt;/li&gt;
      &lt;li&gt;Storage&lt;/li&gt;
      &lt;li&gt;Etc&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Setup Rasp Pi&lt;/li&gt;
  &lt;li&gt;Run D2C message application on Rasp&lt;/li&gt;
  &lt;li&gt;Provision a device using Azure IoT DPS (X.509 Individual Enrollment)&lt;/li&gt;
  &lt;li&gt;D2C Message, Azure Streaming Analytics, Data Storage/DB&lt;/li&gt;
  &lt;li&gt;Custom Vision Edge module deployment&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;setup-dev-environment&quot;&gt;Setup Dev Environment&lt;/h1&gt;

&lt;h2 id=&quot;prerequsite&quot;&gt;Prerequsite&lt;/h2&gt;
&lt;p&gt;hands-on을 위해 개발 PC에 아래 도구들은 미리 설치한다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Visual Studio Code Extension
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=vsciot-vscode.azure-iot-toolkit&quot;&gt;azure-iot-toolkit&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=vsciot-vscode.azure-iot-edge&quot;&gt;azure-iot-edge&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=PeterJausovec.vscode-docker&quot;&gt;docker&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://aka.ms/aziotdevexp&quot;&gt;device exploerer&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://azure.microsoft.com/ko-kr/features/storage-explorer/&quot;&gt;Storage Explorer&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/install/&quot;&gt;Docker CE&lt;/a&gt;&lt;br /&gt;
Install Docker Community Edition (CE). Don’t sign in Docker Desktop after Docker CE installed.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;create-azure-resources&quot;&gt;Create Azure Resources&lt;/h2&gt;

&lt;h3 id=&quot;iothub&quot;&gt;IotHub&lt;/h3&gt;
&lt;h3 id=&quot;dps&quot;&gt;DPS&lt;/h3&gt;
&lt;h3 id=&quot;asa-azure-streaming-analytics&quot;&gt;ASA (Azure Streaming Analytics)&lt;/h3&gt;
&lt;h3 id=&quot;cosmos-db&quot;&gt;Cosmos DB&lt;/h3&gt;
&lt;h3 id=&quot;storage-account&quot;&gt;Storage Account&lt;/h3&gt;

&lt;h1 id=&quot;setup-rasp-pi&quot;&gt;Setup Rasp Pi&lt;/h1&gt;

&lt;h3 id=&quot;install-the-raspbian-operating-system-for-pi&quot;&gt;Install the Raspbian operating system for Pi&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Download Raspbian.
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://downloads.raspberrypi.org/raspbian/images/raspbian-2017-07-05/&quot;&gt;Download Raspbian Stretch&lt;/a&gt; (the .zip file)&lt;/li&gt;
      &lt;li&gt;Extract the Raspbian image to a folder on your computer.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Install Raspbian to the microSD card.
    &lt;ul&gt;
      &lt;li&gt;Download and install the Etcher SD card burner utility&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Run Etcher and select the Raspbian image that you extracted in step 1.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Select the microSD card drive. Etcher may have already selected the correct drive.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Click Flash to install Raspbian to the microSD card.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Remove the microSD card from your computer when installation is complete. It’s safe to remove the microSD card directly because Etcher automatically ejects or unmounts the microSD card upon completion.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Insert the microSD card into Pi.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;enable-ssh-and-i2c&quot;&gt;Enable SSH and I2C&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Connect Pi to the monitor, keyboard, and mouse. 2. Start Pi and then sign into Raspbian by using pi as the user name and raspberry as the&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;password.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Click the Raspberry icon &amp;gt; Preferences &amp;gt; Raspberry Pi Configuration.
&lt;img src=&quot;../assets/images/iothub/rasp_conf01.png&quot; alt=&quot;iothub_conf&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;On the Interfaces tab, set I2C and SSH to Enable, and then click OK. If you don’t have
&lt;img src=&quot;../assets/images/iothub/rasp_conf02.png&quot; alt=&quot;iothub_conf&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;physical sensors and want to use simulated sensor data, this step is optional.&lt;/p&gt;

&lt;p&gt;Connect the sensor to Pi (+) 방향 : 3.3V PWR
&lt;img src=&quot;../assets/images/iothub/rasp_conf_gpo01.png&quot; alt=&quot;rasp_conf_gpo01&quot; /&gt;
&lt;img src=&quot;../assets/images/iothub/rasp_conf_gpo02.png&quot; alt=&quot;rasp_conf_gpo02&quot; /&gt;&lt;/p&gt;

&lt;p&gt;중간 : GPIO 4&lt;/p&gt;

&lt;p&gt;(-) 방향 : GND&lt;/p&gt;

&lt;p&gt;Connect Pi to the network&lt;/p&gt;

&lt;p&gt;Note IP address of your Pi.&lt;/p&gt;

&lt;h1 id=&quot;run-d2c-message-application-on-rasp&quot;&gt;Run D2C message application on Rasp&lt;/h1&gt;
&lt;p&gt;rasp pi -&amp;gt; IotHub 로 센서데이터를 전송하기 위한 샘플 예제코드는 아래 git url을 통해 다운로드 가능하다.  &lt;a href=&quot;https://github.com/Azure-Samples/azure-iot-samples-python&quot;&gt;azure-iot-samples-python&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;```
git clone https://github.com/Azure-Samples/azure-iot-samples-python&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>문형권</name>
        
        
      </author>

      

      
        <category term="azure" />
      
        <category term="iothub" />
      

      
        <summary type="html">Introduce Azure IotHub를 이용하여 다양한 IoT 디바이스를 관리하고, Telemetry 정보를 수집하여 Power BI로 분석 가능하다. 또한 IoT 디바이스를 Edge Computing으로 활용하여 IotHub 런타임 위에 ML Conference가 가능한 컨테이너를 내려 다양한 고급 분석이 가능하다.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Azure Machine Learning Architecture</title>
      <link href="/azure-ml-archi" rel="alternate" type="text/html" title="Azure Machine Learning Architecture" />
      <published>2018-05-08T19:00:00+09:00</published>
      <updated>2018-05-08T19:00:00+09:00</updated>
      <id>/azure-ml-archi</id>
      <content type="html" xml:base="/azure-ml-archi">&lt;h1 id=&quot;azure-ml-architecture&quot;&gt;Azure ML Architecture&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;../assets/images/az_ml_archi.png&quot; alt=&quot;Azure ML Architecture&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Azure ML Architecture는 기본적으로 BigData 수집/저장/분석을 위한 플랫폼과 큰 차이가 없다.
분석을 위한 플랫폼에 ML을 위한 파이프라인이 들어가 있는 차이점이 있을 뿐이다.
따라서 전체적인 구조는 데이터 수집/저장(실시간/배치) -&amp;gt; 데이터 탐색 -&amp;gt; ML 모델 개발 -&amp;gt; ML 서비스 운영(DW/BI) -&amp;gt; 모니터링 구조로 되어있다.&lt;/p&gt;

&lt;h2 id=&quot;1-데이터-수집-batch-job&quot;&gt;1. 데이터 수집 (Batch Job)&lt;/h2&gt;
&lt;p&gt;원천 데이터가 있는 Data WareHouse (DataBase, Hadoop, File ..) 에서 Batch Job으로 데이터를 로딩한 후, 
ETL Processing을 통해 데이터에 대한 정제작업을 하여 Data Lake or Blob Storage에 저장할 한다.&lt;/p&gt;

&lt;h2 id=&quot;2-데이터-수집-realtime-job&quot;&gt;2. 데이터 수집 (Realtime Job)&lt;/h2&gt;
&lt;p&gt;실시간성 데이터 (Social Network, Network Security Info, Applcation Log) 의 경우 Event Hubs, Kafka와 같은 Pub/Sub 구조의 대용량 로그 큐잉 시스템에 저장하고, 이후 Azure DATABRICS, HDINSIGHT, Stream Analytics와 같은 다양한 종류의 분석 플랫폼을 Consumer로 활용하여 ML 데이터로 활용하기 위한 ETL Processing 이 가능하다. 이후 데이터는 다시 분석용 다양한 종료의 분석용 DB(Cosmos DB, RDB, Redis)에 저장하여, 빅데이터 분석 플랫폼에서 BI를 위한 데이터로 활용하거나, Data Warehouse (Data Lake, Blob Storage)에 저장하여 ML을 위한 데이터 용도로 활용한다.&lt;/p&gt;

&lt;h2 id=&quot;3-데이터-탐색&quot;&gt;3. 데이터 탐색&lt;/h2&gt;
&lt;p&gt;2번 과정에 의해 정제된 데이터는 데이터의 포맷과 활용 용도에 따라 NoSQL, Redis 등 다양한 DB에 저장될 수 있고,
Data Lake, Blob Storage와 같은 형태의 Storage 공간에도 저장될 수 있다. 이러한 다양한 데이터 소스를 통해 데이터를 탐색하여 가져온 후, 주요 KPI 항목에 대한 차트를 대시보드 형태로 꾸며 대시보드를 구성하야 BI 도구로 활용할 수 있고, ML 모델 개발을 위한 데이터로도 활용 가능하다.&lt;/p&gt;

&lt;h2 id=&quot;4-ml-모델-개발&quot;&gt;4. ML 모델 개발&lt;/h2&gt;
&lt;p&gt;Azure는 다양한 데이터 소스를 가져와서 ML 모델을 쉽게 개발할 수 있는 AML(Azure ML) 서비스를 제공하고 있다. ML 모델 개발에 필요한 언어, 도구, 파이프라인 설계 등을 쉽게 할 수 있고, 특히 python 언어를 활용하여 3번 과정에서 탐색한 데이터를 Traning 데이터로 활용하여 모델을 만들고, Expreiment 하고, 모델을 Dockerizing 하여 컨테이너 형태로 원하는 타켓에 배포하기 위한 각 과정을 ML 파이프라인으로 설계가 가능하다.&lt;/p&gt;

&lt;h2 id=&quot;5-ml-모델-배포&quot;&gt;5. ML 모델 배포&lt;/h2&gt;
&lt;p&gt;생성된 ML 모델은 다양한 프레임워크(Tensorflow, Pytorch, Keras..)를 통해 다양한 컴퓨팅 자원(Kubernetes, IoT Edge, FPGA, ML Server, ML Studio Web Service, On-Premise ML Servers…)에 Transfer Learning 되고, Realtime or Batch Job을 통해 들어온 데이터를 Infcluence 한다. Realtime 연계를 위해서는 실시간 수집한 데이터를 기반으로 다양한 Serverless 컴퓨팅 자원(Stream Analytics, Service Fabric, Functions, Logic Apps) 활용이 가능하고, Batch 연계를 위해서는 Azure Databricks, SQL Data 도구를 활용 가능하다.
Realtime or Batch 연계를 통해 ML Confluence 된 데이터 결과물들은 비지니스 앱, Analytics 도구 등 다양한 형태와 연동하여 ML 서비스가 가능하다.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>문형권</name>
        
        
      </author>

      

      
        <category term="azure" />
      
        <category term="ml" />
      

      
        <summary type="html">Azure ML Architecture</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Azure Machine Learning Reference Site</title>
      <link href="/azure-ml-tech-docs" rel="alternate" type="text/html" title="Azure Machine Learning Reference Site" />
      <published>2017-07-27T19:00:00+09:00</published>
      <updated>2017-07-27T19:00:00+09:00</updated>
      <id>/azure-ml-tech-docs</id>
      <content type="html" xml:base="/azure-ml-tech-docs">&lt;h1 id=&quot;readme&quot;&gt;Readme&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;DevOps
    &lt;ul&gt;
      &lt;li&gt;Auzre ML, DevOps를 활용하여 데이터 분석 플랫폼 구축&lt;/li&gt;
      &lt;li&gt;샘플 데이터 &amp;amp; 모델 기반으로 DevOps for AI 빌드/릴리즈 파이프라인 설계&lt;/li&gt;
      &lt;li&gt;Model별 버전 관리&lt;/li&gt;
      &lt;li&gt;Model 버전별 precision/recall 결과 비교하여 우수한 Model 자동 배포&lt;/li&gt;
      &lt;li&gt;Azure DevOps 이용하여 신규버전 Container 생성(ACR), 이후 IoT Edge 배포&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Azure ML Service
    &lt;ul&gt;
      &lt;li&gt;Cloud 환경에서 Data + DL Model 학습 (object detection)&lt;/li&gt;
      &lt;li&gt;DL Model Test dataset 활용하여 precision/recall 등 지표에 대한 계산/표시&lt;/li&gt;
      &lt;li&gt;모델 선정 및 Model Container 생성 (versioning)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Iot Edge 연동
    &lt;ul&gt;
      &lt;li&gt;Vision AI Dev Kit Camera에 Model Container 배포&lt;/li&gt;
      &lt;li&gt;Image와 Prediction한 결과를 Cloud로 전송하여 live prediction 결과 취합&lt;/li&gt;
      &lt;li&gt;Bounding box와 confidence score 값 저장&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;개요&quot;&gt;개요&lt;/h1&gt;
&lt;p&gt;기본 기술문서: https://docs.microsoft.com/en-us/azure/machine-learning/service/&lt;/p&gt;

&lt;p&gt;주요 개념: https://docs.microsoft.com/en-us/azure/machine-learning/service/concept-azure-machine-learning-architecture&lt;/p&gt;

&lt;p&gt;모델관리 개념: https://docs.microsoft.com/en-us/azure/machine-learning/service/concept-model-management-and-deployment&lt;/p&gt;

&lt;p&gt;Pipeline 개념: https://docs.microsoft.com/en-us/azure/machine-learning/service/concept-ml-pipelines&lt;/p&gt;

&lt;p&gt;보안 관련 접근: https://docs.microsoft.com/en-us/azure/machine-learning/service/concept-enterprise-security&lt;/p&gt;

&lt;h1 id=&quot;hackfest&quot;&gt;Hackfest&lt;/h1&gt;

&lt;p&gt;아래 hackfest 사이트를 통해 Azure ML의 전반적인 사용법을 익힐 수 있습니다.
https://github.com/Azure/LearnAI_Azure_ML&lt;/p&gt;

&lt;h1 id=&quot;샘플&quot;&gt;샘플&lt;/h1&gt;

&lt;p&gt;샘플 사용방법: https://docs.microsoft.com/en-us/azure/machine-learning/service/samples-notebooks&lt;/p&gt;

&lt;p&gt;깃허브: https://github.com/Azure/MachineLearningNotebooks&lt;/p&gt;

&lt;p&gt;(여기에 아래 거의 모든 기능들에 대한 샘플이 있으니 가장 유용할 것으로 판단.)&lt;/p&gt;

&lt;p&gt;기능별 상세 가이드는 How-to guides (방법 가이드) 이하 항목으로 나온다.
직관적으로 되어 있어서 원하시는 단계를 찾으시면 되며, 몇 가지만 소개하면 다음과 같습니다:&lt;/p&gt;

&lt;p&gt;개발환경: https://docs.microsoft.com/en-us/azure/machine-learning/service/how-to-configure-environment&lt;/p&gt;

&lt;p&gt;DataPrep SDK를 이용한 데이터가공: https://docs.microsoft.com/en-us/azure/machine-learning/service/how-to-transform-data&lt;/p&gt;

&lt;p&gt;Datastore: https://docs.microsoft.com/en-us/azure/machine-learning/service/how-to-access-data&lt;/p&gt;

&lt;p&gt;원격수행: https://docs.microsoft.com/en-us/azure/machine-learning/service/how-to-set-up-training-targets&lt;/p&gt;

&lt;p&gt;Tensorflow 기본방식: https://docs.microsoft.com/en-us/azure/machine-learning/service/how-to-train-tensorflow&lt;/p&gt;

&lt;p&gt;Hyperparameter Tuning: https://docs.microsoft.com/en-us/azure/machine-learning/service/how-to-tune-hyperparameters&lt;/p&gt;

&lt;p&gt;Automated ML: https://docs.microsoft.com/en-us/azure/machine-learning/service/how-to-configure-auto-train&lt;/p&gt;

&lt;p&gt;ONNX: https://docs.microsoft.com/en-us/azure/machine-learning/service/how-to-build-deploy-onnx&lt;/p&gt;

&lt;p&gt;배포: https://docs.microsoft.com/en-us/azure/machine-learning/service/how-to-deploy-and-where&lt;/p&gt;

&lt;p&gt;실시간 추론: https://docs.microsoft.com/en-us/azure/machine-learning/service/how-to-consume-web-service&lt;/p&gt;

&lt;p&gt;배치 추론: https://docs.microsoft.com/en-us/azure/machine-learning/service/how-to-run-batch-predictions&lt;/p&gt;

&lt;p&gt;모니터: https://docs.microsoft.com/en-us/azure/machine-learning/service/how-to-enable-app-insights&lt;/p&gt;

&lt;p&gt;쿼터관리: https://docs.microsoft.com/en-us/azure/machine-learning/service/how-to-manage-quotas&lt;/p&gt;

&lt;h1 id=&quot;sdk&quot;&gt;SDK&lt;/h1&gt;
&lt;p&gt;Azure ML SDK (설치방법 포함): https://docs.microsoft.com/en-us/python/api/overview/azure/ml/intro?view=azure-ml-py&lt;/p&gt;

&lt;p&gt;Dataprep SDK: https://docs.microsoft.com/en-us/python/api/overview/azure/dataprep/intro?view=azure-dataprep-py&lt;/p&gt;

&lt;p&gt;Monitoring SDK: https://docs.microsoft.com/en-us/python/api/overview/azure/monitoring/intro?view=azureml-monitoring-py&lt;/p&gt;

&lt;h1 id=&quot;etc&quot;&gt;ETC&lt;/h1&gt;
&lt;p&gt;릴리즈 노트: https://docs.microsoft.com/en-us/azure/machine-learning/service/azure-machine-learning-release-notes&lt;/p&gt;

&lt;p&gt;가격체계: https://azure.microsoft.com/ko-kr/pricing/details/machine-learning-service/&lt;/p&gt;

&lt;p&gt;가장 빠른 방법은 아래의 Tutorial 아래에 있는 4개의 샘플을 직접 수행&lt;/p&gt;

&lt;p&gt;MNIST 데이터로 1. 모델 생성, 2. 모델 배포&lt;/p&gt;

&lt;p&gt;NYC Taxi 데이터로 1. 데이터 가공, 2. Automated ML로 모델 생성&lt;/p&gt;

&lt;p&gt;https://docs.microsoft.com/en-us/azure/machine-learning/service/tutorial-train-models-with-aml&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>문형권</name>
        
        
      </author>

      

      
        <category term="azure" />
      
        <category term="ml" />
      

      
        <summary type="html">Readme DevOps Auzre ML, DevOps를 활용하여 데이터 분석 플랫폼 구축 샘플 데이터 &amp;amp; 모델 기반으로 DevOps for AI 빌드/릴리즈 파이프라인 설계 Model별 버전 관리 Model 버전별 precision/recall 결과 비교하여 우수한 Model 자동 배포 Azure DevOps 이용하여 신규버전 Container 생성(ACR), 이후 IoT Edge 배포 Azure ML Service Cloud 환경에서 Data + DL Model 학습 (object detection) DL Model Test dataset 활용하여 precision/recall 등 지표에 대한 계산/표시 모델 선정 및 Model Container 생성 (versioning) Iot Edge 연동 Vision AI Dev Kit Camera에 Model Container 배포 Image와 Prediction한 결과를 Cloud로 전송하여 live prediction 결과 취합 Bounding box와 confidence score 값 저장 개요 기본 기술문서: https://docs.microsoft.com/en-us/azure/machine-learning/service/</summary>
      

      
      
    </entry>
  
</feed>
